package com.ingang.enroll.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.ingang.enroll.service.EnrollService;
import com.ingang.enroll.vo.EnrollVO;
import com.ingang.member.service.MemberService;

import lombok.extern.log4j.Log4j;

@Controller
@RequestMapping("/enroll")
@Log4j
public class EnrollContorller {
	
	@Autowired
	@Qualifier("enrollServiceImpl")
	private EnrollService service;
	
	@Autowired
	@Qualifier("memberServiceImpl")
	private MemberService mService;
	
	
	private EnrollVO vo = null;
	
	@RequestMapping("/test.do")
	public String test() {
		
		return "/enroll/test";
		
	}
	
	// 강의 구매내역
	@RequestMapping("/orderList.do")
	public String orderList(Model model) {
		
		log.info("강의 구매 내역 -----------------------------------------------");
		vo = new EnrollVO();
		vo.setId("test");
		
		model.addAttribute("list", service.orderList(vo));
		
		return "/enroll/orderList";
	}
	
	// 강의 구매 상세내역
	@RequestMapping("/orderView.do")
	public String orderView(long eno, Model model) {
		
		log.info("강의 구매 상세내역 -----------------------------------------------");
		vo = new EnrollVO();
		vo.setId("test");
		vo.setEno(eno);
		
		model.addAttribute("view", service.orderView(vo));
		
		return "/enroll/orderView";
	}
	
	// 수강 목록
	@RequestMapping("/enrollList.do")
	public String enrollList(Model model) {
		log.info("수강 목록 -----------------------------------------------");
		
		String id = "test";
		model.addAttribute("list", service.enrollList(id));
		
		return "/enroll/enrollList";
	}
	
	// 수강 결제 페이지
	@GetMapping("/enroll.do")
	public String enrollForm(Model model) {
		log.info("수강 결제 페이지 -----------------------------------------------");
		
		String id="test";
		
		model.addAttribute("course");
		model.addAttribute("member", mService.userView(id));
		
		return "/enroll/enroll";
	}
	
	// 수강 결제 처리
	@PostMapping("/enroll.do")
	public String enroll() {
		log.info("수강 결제 처리 -----------------------------------------------");
		
		return "redirect:/enroll/orderList.do";
	}
	
	// 수강 취소
	@PostMapping("/delete.do")
	public String delete(EnrollVO vo,RedirectAttributes rttr) {
		log.info("수강 결제 취소 -----------------------------------------------");
		
		service.deleteEnroll(vo);
		
		rttr.addFlashAttribute("msg", "정상적으로 취소되었습니다.");
		
		return "redirect:/enroll/orderList.do";
	}
	

}
