package com.ingang.mentoring.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.ingang.mentoring.service.MentoringService;
import com.ingang.mentoring.vo.MentoringVO;
import com.webjjang.util.PageObject;

@Controller
@RequestMapping("/mentoring")
public class MentoringController {

	@Autowired
	@Qualifier("mentoringServiceImpl")
	private MentoringService service;

	@RequestMapping("/list.do")
	public String list(@ModelAttribute("pageObject") PageObject pageObject, Model model) {

		model.addAttribute("list", service.list(pageObject));

		return "mentoring/list";
	}

	@RequestMapping("/flist.do")
	public String flist(String[] checkedValues, @ModelAttribute("pageObject") PageObject pageObject, Model model) {

		model.addAttribute("flist", service.flist(checkedValues, pageObject));

		return "mentoring/flist";
	}

	@RequestMapping("/view.do")
	// 전달되는 변수로 받을 때는 한 개씩 따로 따로 받는다.
	public String view(long mno, Model model) {
		model.addAttribute("vo", service.view(mno));
		return "mentoring/view";
	}
	
	@GetMapping("/write.do")
	public String writeForm() {
		return "mentoring/write";
	}
	@PostMapping("/write.do")
	public String write(MentoringVO vo, RedirectAttributes rttr) {
		service.write(vo);
		
		rttr.addFlashAttribute("msg", "글등록이 되었습니다.");
		
		return "redirect:list.do";
	}
	
	@GetMapping("/update.do")
	public String updateForm() {
		return "mentoring/update";
	}
	@PostMapping("/update.do")
	public String update(MentoringVO vo, RedirectAttributes rttr) {
		service.update(vo);
		
		rttr.addFlashAttribute("msg", "글수정이 되었습니다.");
		
		return "redirect:view.do?no="+vo.getMno();
	}
	
	@GetMapping("/deadline.do")
	public String deadlineForm() {
		return "mentoring/deadline";
	}
	@PostMapping("/deadline.do")
	public String deadline(long mno, RedirectAttributes rttr) {
		service.deadline(mno);
		
		rttr.addFlashAttribute("msg", "마감처리 되었습니다.");
		
		return "redirect:list.do";
	}

	
}
